export enum DCFFormControls {
    ADO_REFERENCE_NUMBER = 'adoReferenceNumber',
    ADDRESS = 'address',
    ARRIVAL_DATE = 'arrivalDate',
    ATHLETE_LEVEL = 'athleteLevel',
    ATHLETE_REPRESENTATIVE = 'athleteRepresentative',
    BLOOD_LOSS = 'bloodLoss',
    BLOOD_OFFICIAL = 'bloodCollectionOfficial',
    BLOOD_TRANSFUSION_DECLARATION = 'bloodTransfusionDeclaration',
    CITY = 'city',
    COACH = 'coach',
    COLLECTED_AFTER_3_DAYS = 'collectedAfter3Days',
    COLLECTION_DATE = 'collectionDate',
    COMPETITION_NAME = 'competitionName',
    CONSENT_FOR_RESEARCH = 'consentForResearch',
    COUNTRY = 'country',
    DCO = 'dco',
    DECLARATION_OF_SUPPLEMENTS = 'medicationSupplementDeclaration',
    DOCTOR = 'doctor',
    EMAIL = 'email',
    EXTREME_ENVIRONMENT = 'exposedToExtremeConditions',
    FEE_FOR_SERVICE = 'feeForService',
    HAS_BLOOD_LOSS = 'hasBloodLoss',
    HAS_BLOOD_TRANSFUSION = 'hasBloodTransfusion',
    HAS_HAD_TRAINING = 'hasHadTraining',
    HAS_HIGH_ALTITUDE_SIMULATION = 'hasHighAltitudeSimulation',
    HAS_HIGH_ALTITUDE_TRAINING = 'hasHighAltitudeTraining',
    HIGH_ALTITUDE_SIMULATION = 'highAltitudeSimulation',
    HIGH_ALTITUDE_TRAINING = 'highAltitudeTraining',
    IDENTIFICATION_DOCUMENT = 'identificationDocumentInfo',
    IDENTIFICATION_DOCUMENT_TYPE = 'identificationDocumentType',
    IRREGULARITIES = 'confirmationOfProcedure',
    LABORATORY = 'laboratory',
    MAJOR_GAME_EVENT = 'majorGameEvent',
    MANUFACTURER = 'manufacturer',
    MANUFACTURER_KIT = 'manufacturerKit',
    NON_CONFORMITIES = 'nonConformities',
    NOTIFYING_CHAPERONE = 'notifyingChaperone',
    PARTIAL_SAMPLE = 'partial',
    PHONE = 'phone',
    PROCEDURE_END_DATE = 'procedureEndDate',
    RESULT_MANAGEMENT_AUTHORITY = 'resultManagementAuthority',
    SAMPLE_CODE = 'code',
    SAMPLE_COLLECTION_AUTHORITY = 'sampleCollectionAuthority',
    SAMPLE_TYPE = 'sampleType',
    SEATED = 'seated',
    SPECIFIC_GRAVITY = 'specificGravity',
    SPORT_DISCIPLINE = 'sportDiscipline',
    SPORT_NATIONALITY = 'sportNationality',
    STATE = 'state',
    TEMP_LOGGER_ID = 'tempLoggerId',
    TEST_AUTHORITY = 'testAuthority',
    TEST_COORDINATOR = 'testCoordinator',
    TEST_NOTIFICATION = 'testNotification',
    TEST_TYPE = 'inCompetition',
    TESTING_ORDER_ID = 'testingOrderId',
    TIMEZONE = 'timezone',
    TRAINING_TYPE = 'trainingType',
    TRANSFUSION = 'transfusion',
    VOLUME = 'volume',
    VOLUME_BELOW_MINIMUM_REASON = 'volumeBelowMinimumReason',
    WITNESS_CHAPERONE = 'witnessChaperone',
}

export enum TOFormControls {
    ADO_REFERENCE_NUMBER = 'adoReferenceNumber',
    ATHLETE_INFORMATION = 'athleteInformation',
    COMPETITION_CATEGORY = 'competitionCategory',
    COMPETITION_NAME = 'competitionName',
    CREATED_BY = 'addedBy',
    CREATION_DATE = 'creationDate',
    CREATION_TIMEZONE = 'creationTimeZoneId',
    DCP_INSTRUCTIONS = 'instruction',
    END_DATE = 'endDate',
    FEE_FOR_SERVICE = 'feeForService',
    GRANT_SCA_WRITE_ACCESS = 'grantSCAWriteAccess',
    LABORATORY_NOTES = 'laboratoryNotes',
    LAST_UPDATE_DATE = 'lastUpdateDate',
    LAST_UPDATE_TIMEZONE = 'lastUpdateTimeZoneId',
    LAST_UPDATED_BY = 'lastUpdatedBy',
    MAJOR_GAME_EVENT = 'majorGameEvent',
    NOTIFIED_ADOS = 'ados',
    RESULT_MANAGEMENT_AUTHORITY = 'resultManagementAuthority',
    SAMPLE_COLLECTION_AUTHORITY = 'sampleCollectionAuthority',
    START_DATE = 'startDate',
    STATUS = 'status',
    TEST_ANALYSIS_RESULTS = 'analysisResults',
    TEST_AUTHORITY = 'testAuthority',
    TEST_COORDINATOR = 'testCoordinator',
    TEST_INFORMATION = 'testInformation',
    TEST_PARTICIPANT_INFORMATION = 'testParticipants',
    TEST_TIMING = 'testTiming',
    TEST_TYPE = 'inCompetition',
    TESTING_CITY = 'city',
    TESTING_COUNTRY = 'country',
    TESTING_DESCRIPTION = 'description',
    TESTING_ORDER_NUMBER = 'testingOrderNumber',
    TESTING_REGION = 'state',
}

export enum UAFormControls {
    ADDRESS = 'address',
    ATHLETE_ADAMS_ID = 'adamsId',
    ATHLETE_DATE_OF_BIRTH = 'dateOfBirth',
    ATHLETE_SPORT_NATIONALITY = 'sportNationality',
    ATTEMPT_DATE = 'attemptDate',
    ATTEMPT_DESCRIPTION = 'attemptDescription',
    ATTEMPT_END_HOUR = 'attemptEndHour',
    ATTEMPT_END_MINUTE = 'attemptEndMinute',
    ATTEMPT_METHODS = 'attemptMethods',
    ATTEMPT_START_HOUR = 'attemptStartHour',
    ATTEMPT_START_MINUTE = 'attemptStartMinute',
    DCO = 'dco',
    LOCATION = 'location',
    LOCATION_DESCRIPTION = 'locationDescription',
    REPORT_DATE = 'reportDate',
    STATUS = 'status',
    TEST_RESULT_MANAGEMENT_AUTHORITY = 'resultManagementAuthority',
    TEST_SAMPLE_COLLECTION_AUTHORITY = 'sampleCollectionAuthority',
    TEST_SPORT = 'sport',
    TEST_TEST_AUTHORITY = 'testAuthority',
    TEST_TEST_COORDINATOR = 'testCoordinator',
    TEST_TESTING_ORDER_ID = 'testingOrderNumber',
    TEST_TYPE = 'inCompetition',
    TIME_SLOT_START_HOUR = 'timeSlotStartHour',
    TIME_SLOT_START_MINUTE = 'timeSlotStartMinute',
    WHEREABOUTS_LAST_CHECKED_DATE = 'whereaboutsLastCheckedDate',
    WHEREABOUTS_LAST_CHECKED_TIME_HOUR = 'whereaboutsLastCheckedTimeHour',
    WHEREABOUTS_LAST_CHECKED_TIME_MINUTE = 'whereaboutsLastCheckedTimeMinute',
}
